package com.example.mydairyimport android.content.ContentValuesimport android.content.Intentimport android.os.Bundleimport android.util.Logimport android.widget.Toastimport androidx.appcompat.app.AppCompatActivityimport com.google.android.gms.auth.api.signin.GoogleSignInimport com.google.android.gms.auth.api.signin.GoogleSignInAccountimport com.google.android.gms.auth.api.signin.GoogleSignInClientimport com.google.android.gms.auth.api.signin.GoogleSignInOptionsimport com.google.android.gms.common.SignInButtonimport com.google.android.gms.common.api.ApiExceptionimport com.google.firebase.auth.FirebaseAuthimport com.google.firebase.auth.FirebaseUserimport com.google.firebase.auth.GoogleAuthProviderimport com.google.firebase.auth.ktx.authimport com.google.firebase.database.DatabaseReferenceimport com.google.firebase.database.FirebaseDatabaseimport com.google.firebase.ktx.Firebaseclass LoginActivity() : AppCompatActivity() {    private lateinit var googleSignInClient: GoogleSignInClient    private lateinit var auth: FirebaseAuth    private lateinit var sign_in_button: SignInButton    private lateinit var database: DatabaseReference    private companion object {        private const val TAG = "LoginActivity"        private const val RC_GOOGLE_SIGH_IN = 4926    }    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        setContentView(R.layout.activity_login)        sign_in_button = findViewById(R.id.sign_in_button)        auth = Firebase.auth        val gso = GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)            .requestIdToken("114664942884-disdff68en6baj2nuror5a2ncj7j9jh1.apps.googleusercontent.com")            .requestEmail()            .build()        val client: GoogleSignInClient = GoogleSignIn.getClient(this, gso)        sign_in_button.setOnClickListener {            val signInIntent = client.signInIntent            startActivityForResult(signInIntent, RC_GOOGLE_SIGH_IN)        }    }    override fun onStart() {        super.onStart()        val currentUser = auth.currentUser        updateUi(currentUser)    }    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {        super.onActivityResult(requestCode, resultCode, data)        if (requestCode == RC_GOOGLE_SIGH_IN) {            val task = GoogleSignIn.getSignedInAccountFromIntent(data)            try {                val account: GoogleSignInAccount = task.getResult(ApiException::class.java)!!                Log.d(TAG, "firebaseAuthWithGoogle:" + account.id)                firebaseAuthWithGoogle(account.idToken!!)            } catch (e: ApiException) {                Log.w(TAG, "Google sign in failed", e)            }        }    }    private fun assigner(){        val user = auth.currentUser        database = FirebaseDatabase.getInstance("https://my-diary-620b5-default-rtdb.asia-southeast1.firebasedatabase.app")                    .getReference("/Users/"+user?.uid)        database.get().addOnSuccessListener {            if (it.exists()){                Toast.makeText(this,"Welcome back "+user?.displayName+'!',Toast.LENGTH_SHORT).show()            }            else {                val entry = Entry(0,0)                database.setValue(entry)                Toast.makeText(this,"Welcome "+user?.displayName+'!',Toast.LENGTH_SHORT).show()            }        }    }    private fun firebaseAuthWithGoogle(idToken: String) {        val credential = GoogleAuthProvider.getCredential(idToken, null)        auth.signInWithCredential(credential)            .addOnCompleteListener(this) { task ->                if (task.isSuccessful) {                    Log.d(TAG, "signInWithCredential:success")                    val user = auth.currentUser                    assigner()                    updateUi(user)                } else {                    Log.w(ContentValues.TAG, "signInWithCredential:failure")                    updateUi(null)                }            }    }    private fun updateUi(user: FirebaseUser?) {        if (user == null) {            Log.w(TAG, "User is null, not going to navigate")            return        }        startActivity(Intent(this, ViewActivity::class.java))        Toast.makeText(this, "Singned in Successfully", Toast.LENGTH_SHORT).show()        finish()    }}